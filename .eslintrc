{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "ignorePatterns": ["**/jest.config.ts", "**/jest.preset.ts", "**/custom.d.ts", "**/main.ts", "**/environment.ts", "**/environment.prod.ts"],
  "plugins": [
    "@typescript-eslint",
    "rxjs",
    "rxjs-angular"
  ],
  "parserOptions": {
    "project": "tsconfig.json"
  },
  "extends": [
  ],
  "rules": {
    // basic rules
    "prefer-const": "error",
    "rxjs-angular/prefer-takeuntil": [
      "error",
      {
        "alias": ["untilDestroyed"],
        "checkComplete": true,
        "checkDecorators": ["Component"]
      }
   ],
    "@typescript-eslint/no-useless-constructor": "error",
    "max-lines-per-function": ["error", { "max": 35 }],
    "no-param-reassign": "error",
    "indent": ["error", 2, {"SwitchCase": 1}],
    "semi": ["error", "always", { "omitLastInOneLineBlock": true}],
    "no-template-curly-in-string": "error",
    "prefer-template": "error",
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      {
        "accessibility": "no-public"
      }
    ],
    "@typescript-eslint/no-extraneous-class": ["error", {
      "allowWithDecorator": true
    }],
    "@typescript-eslint/no-this-alias": [
      "error",
      {
        "allowDestructuring": false
      }
    ],
    // typescript strict null check required
    "@typescript-eslint/strict-boolean-expressions": "error",
    "@typescript-eslint/explicit-function-return-type": ["error"],
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "never"
      }
    ],
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": "variable",
        "modifiers": ["destructured"],
        "format": null
      },
      {
        "selector": "typeProperty",
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },
      {
        "selector": "objectLiteralProperty",
        "format": null
      },
      {
        "selector": ["typeLike", "enumMember"],
        "format": ["PascalCase"]
      }
    ],

    // compact - better reading
    "max-len": [
      "error",
      {
        "code": 120,
        "ignoreUrls": true,
        "ignoreStrings": true
      }
    ],
    "max-lines": ["error", 500],
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/typedef": [
      "error",
      {
        "variableDeclaration": true,
        "objectDestructuring": true,
        "variableDeclarationIgnoreFunction": true
      }
    ],

    // clear trash
    "no-trailing-spaces": "error",
    "@typescript-eslint/no-unused-expressions": "error",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": false
      }
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "warn",
    "no-duplicate-case": "error",
    "no-duplicate-imports": "error",
    "no-console": "error",
    "no-empty": "error",
    "no-sequences": "error",
    "no-sparse-arrays": "error"
  }
}